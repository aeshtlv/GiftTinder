import logging
from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import BOT_TOKEN, WEBAPP_URL

# Configure logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Send a message with the web app button."""
    keyboard = [
        [InlineKeyboardButton("üéÅ Gift Tinder", web_app=WebAppInfo(url=WEBAPP_URL))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gift Tinder!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ü–µ–Ω–∏–≤–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π "
        "–∏ –Ω–∞–π—Ç–∏ —Ç–µ—Ö, –∫—Ç–æ –æ—Ü–µ–Ω–∏–ª –≤–∞—à–∏ –ø–æ–¥–∞—Ä–∫–∏!",
        reply_markup=reply_markup
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Send a help message."""
    help_text = """
üéÅ Gift Tinder - –ü–æ–º–æ—â—å

üì± –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Gift Tinder" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
2. –°–≤–∞–π–ø–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –¥–ª—è –ª–∞–π–∫–∞, –≤–ª–µ–≤–æ –¥–ª—è –¥–∏–∑–ª–∞–π–∫–∞
3. –ü—Ä–∏ –≤–∑–∞–∏–º–Ω–æ–º –ª–∞–π–∫–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –º—ç—Ç—á!
4. –û–±—â–∞–π—Ç–µ—Å—å —Å –º—ç—Ç—á–∞–º–∏ –≤ —á–∞—Ç–µ

‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã:
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/matches - –í–∞—à–∏ –º—ç—Ç—á–∏

üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –≤–∞—à–∏–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏
- –î–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã Telegram WebApp API
- –ù–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @aeshtlv
    """
    
    await update.message.reply_text(help_text)

async def profile_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show user profile."""
    user = update.effective_user
    keyboard = [
        [InlineKeyboardButton("üìä –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", web_app=WebAppInfo(url=f"{WEBAPP_URL}/profile"))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name}\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:",
        reply_markup=reply_markup
    )

async def matches_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show user matches."""
    user = update.effective_user
    keyboard = [
        [InlineKeyboardButton("üíï –ú–æ–∏ –º—ç—Ç—á–∏", web_app=WebAppInfo(url=f"{WEBAPP_URL}/matches"))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üíï –í–∞—à–∏ –º—ç—Ç—á–∏\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –º—ç—Ç—á–∏ –∏ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ:",
        reply_markup=reply_markup
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle button presses."""
    query = update.callback_query
    await query.answer()
    
    # Handle different button callbacks if needed
    if query.data == "start_app":
        keyboard = [
            [InlineKeyboardButton("üéÅ Gift Tinder", web_app=WebAppInfo(url=WEBAPP_URL))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            "üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gift Tinder!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
            reply_markup=reply_markup
        )

def main():
    """Start the bot."""
    # Create the Application
    application = Application.builder().token(BOT_TOKEN).build()

    # Add handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("profile", profile_command))
    application.add_handler(CommandHandler("matches", matches_command))
    application.add_handler(CallbackQueryHandler(button))

    # Start the bot
    logger.info("Starting Gift Tinder Bot...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 